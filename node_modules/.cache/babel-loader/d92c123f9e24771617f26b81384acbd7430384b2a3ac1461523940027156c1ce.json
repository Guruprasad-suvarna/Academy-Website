{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2000081298\\\\Amerihealth\\\\acfc\\\\src\\\\pages\\\\Project and Track\\\\Edoprod.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Edoprod.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Edoprod = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const files = [{\n    name: 'ACFC Response Excel',\n    type: 'excel',\n    path: '/acfc_response.xlsx'\n  }, {\n    name: 'Enhancements and ticket data',\n    type: 'excel',\n    path: '/ticket_data.xlsx'\n  }];\n  const handleFileDisplay = path => {\n    // Display all Excel files only when one of the specific buttons is clicked\n    if (path === '/acfc_response.xlsx' || path === '/ticket_data.xlsx') {\n      const excelFiles = files.map(file => file.path);\n      setSelectedFile(excelFiles);\n    } else {\n      // Otherwise, open the selected Excel file\n      setSelectedFile(path);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container3\",\n    children: [files.map((file, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button3\",\n      onClick: () => handleFileDisplay(file.path),\n      children: file.name\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)), selectedFile && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-container3\",\n      children: Array.isArray(selectedFile) ? selectedFile.map((path, index) => /*#__PURE__*/_jsxDEV(\"iframe\", {\n        className: \"file-display\",\n        src: path,\n        title: `Excel File ${index}`\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }, this)) :\n      /*#__PURE__*/\n      // Otherwise, display the selected Excel file\n      _jsxDEV(\"iframe\", {\n        className: \"file-display\",\n        src: selectedFile,\n        title: \"Excel File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Edoprod, \"cz3B5sQOxlrekAnUFUPeMaA2gqY=\");\n_c = Edoprod;\nexport default Edoprod;\nvar _c;\n$RefreshReg$(_c, \"Edoprod\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Edoprod","_s","selectedFile","setSelectedFile","files","name","type","path","handleFileDisplay","excelFiles","map","file","className","children","index","onClick","fileName","_jsxFileName","lineNumber","columnNumber","Array","isArray","src","title","_c","$RefreshReg$"],"sources":["C:/Users/2000081298/Amerihealth/acfc/src/pages/Project and Track/Edoprod.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Edoprod.css';\r\n\r\nconst Edoprod= () => {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n\r\n  const files = [\r\n    { name: 'ACFC Response Excel', type: 'excel', path: '/acfc_response.xlsx' },\r\n    { name: 'Enhancements and ticket data', type: 'excel', path: '/ticket_data.xlsx' },\r\n  ];\r\n\r\n  const handleFileDisplay = (path) => {\r\n    // Display all Excel files only when one of the specific buttons is clicked\r\n    if (path === '/acfc_response.xlsx' || path === '/ticket_data.xlsx') {\r\n      const excelFiles = files.map(file => file.path);\r\n      setSelectedFile(excelFiles);\r\n    } else {\r\n      // Otherwise, open the selected Excel file\r\n      setSelectedFile(path);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className=\"container3\">\r\n      {files.map((file, index) => (\r\n        <button key={index} className=\"button3\" onClick={() => handleFileDisplay(file.path)}>\r\n          {file.name}\r\n        </button>\r\n      ))}\r\n      {selectedFile && (\r\n        <div className=\"file-container3\">\r\n          {/* Display all Excel files if multiple paths are selected */}\r\n          {Array.isArray(selectedFile) ? (\r\n            selectedFile.map((path, index) => (\r\n              <iframe key={index} className=\"file-display\" src={path} title={`Excel File ${index}`} />\r\n            ))\r\n          ) : (\r\n            // Otherwise, display the selected Excel file\r\n            <iframe className=\"file-display\" src={selectedFile} title=\"Excel File\" />\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Edoprod;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,OAAO,GAAEA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMO,KAAK,GAAG,CACZ;IAAEC,IAAI,EAAE,qBAAqB;IAAEC,IAAI,EAAE,OAAO;IAAEC,IAAI,EAAE;EAAsB,CAAC,EAC3E;IAAEF,IAAI,EAAE,8BAA8B;IAAEC,IAAI,EAAE,OAAO;IAAEC,IAAI,EAAE;EAAoB,CAAC,CACnF;EAED,MAAMC,iBAAiB,GAAID,IAAI,IAAK;IAClC;IACA,IAAIA,IAAI,KAAK,qBAAqB,IAAIA,IAAI,KAAK,mBAAmB,EAAE;MAClE,MAAME,UAAU,GAAGL,KAAK,CAACM,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACJ,IAAI,CAAC;MAC/CJ,eAAe,CAACM,UAAU,CAAC;IAC7B,CAAC,MAAM;MACL;MACAN,eAAe,CAACI,IAAI,CAAC;IACvB;EACF,CAAC;EAED,oBACER,OAAA;IAAKa,SAAS,EAAC,YAAY;IAAAC,QAAA,GACxBT,KAAK,CAACM,GAAG,CAAC,CAACC,IAAI,EAAEG,KAAK,kBACrBf,OAAA;MAAoBa,SAAS,EAAC,SAAS;MAACG,OAAO,EAAEA,CAAA,KAAMP,iBAAiB,CAACG,IAAI,CAACJ,IAAI,CAAE;MAAAM,QAAA,EACjFF,IAAI,CAACN;IAAI,GADCS,KAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEV,CACT,CAAC,EACDjB,YAAY,iBACXH,OAAA;MAAKa,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAE7BO,KAAK,CAACC,OAAO,CAACnB,YAAY,CAAC,GAC1BA,YAAY,CAACQ,GAAG,CAAC,CAACH,IAAI,EAAEO,KAAK,kBAC3Bf,OAAA;QAAoBa,SAAS,EAAC,cAAc;QAACU,GAAG,EAAEf,IAAK;QAACgB,KAAK,EAAG,cAAaT,KAAM;MAAE,GAAxEA,KAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAqE,CACxF,CAAC;MAAA;MAEF;MACApB,OAAA;QAAQa,SAAS,EAAC,cAAc;QAACU,GAAG,EAAEpB,YAAa;QAACqB,KAAK,EAAC;MAAY;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IACzE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAClB,EAAA,CAzCID,OAAO;AAAAwB,EAAA,GAAPxB,OAAO;AA2Cb,eAAeA,OAAO;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}