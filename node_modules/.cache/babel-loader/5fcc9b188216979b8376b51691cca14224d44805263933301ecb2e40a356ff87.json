{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2000081298\\\\Amerihealth\\\\acfc\\\\src\\\\pages\\\\Payroll\\\\Edoprod.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import './Edoprod.css';\n\n// const Edoprod= () => {\n\n//   const [selectedFile, setSelectedFile] = useState(null);\n\n//   const files = [\n//     { name: 'ACFC Response Excel', type: 'excel', path: '/excel_file.xlsx' },\n//     { name: 'Enhancements and ticket data', type: 'excel', path: '/excel_file.xlsx' },\n//   ];\n//   const handleFileDisplay = (path) => {\n//     // window.open(path, '_blank');\n//     window.location.href = path;\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       {files.map((file, index) => (\n//         // <button key={index} className=\"button\" onClick={() => handleFileDisplay(file.path)}>\n//         //   {file.name}\n//         // </button>\n//         <button key={index} className=\"button\" onClick={() => handleFileDisplay(file.path)}>\n//   {file.name}\n// </button>\n\n//       ))}\n//       {selectedFile && (\n//         <div className=\"file-container\">\n//           {/* Display the selected file based on its type */}\n//           {selectedFile.endsWith('.png') && <img className=\"file-display\" src={selectedFile} alt=\"File\" />}\n//           {selectedFile.endsWith('.pptx') && <iframe className=\"file-display\" src={selectedFile} title=\"File\" />}\n//           {selectedFile.endsWith('.pdf') && <iframe className=\"file-display\" src={selectedFile} title=\"File\" />}\n//           {selectedFile.endsWith('.docx') && <iframe className=\"file-display\" src={selectedFile} title=\"File\" />}\n//           {selectedFile.endsWith('.xlsx') && <iframe className=\"file-display\" src={selectedFile} title=\"File\" />}\n//           {selectedFile.endsWith('.video') && (\n//             <video className=\"file-display\" src={selectedFile} controls>\n//               Your browser does not support the video tag.\n//             </video>\n//           )}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Edoprod;\nimport React, { useState } from 'react';\nimport './Edoprod.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Edoprod = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const files = [{\n    name: 'ACFC Response Excel',\n    type: 'excel',\n    path: '/acfc_response.xlsx'\n  }, {\n    name: 'Enhancements and ticket data',\n    type: 'excel',\n    path: '/ticket_data.xlsx'\n  }];\n  const handleFileDisplay = () => {\n    // Get paths of all Excel files\n    const excelFiles = files.map(file => file.path);\n    // Set the selected file to display all Excel files\n    setSelectedFile(excelFiles);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      onClick: handleFileDisplay,\n      children: \"Display All Excel Files\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), selectedFile && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-container\",\n      children: selectedFile.map((path, index) => /*#__PURE__*/_jsxDEV(\"iframe\", {\n        className: \"file-display\",\n        src: path,\n        title: `Excel File ${index}`\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(Edoprod, \"cz3B5sQOxlrekAnUFUPeMaA2gqY=\");\n_c = Edoprod;\nexport default Edoprod;\nvar _c;\n$RefreshReg$(_c, \"Edoprod\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Edoprod","_s","selectedFile","setSelectedFile","files","name","type","path","handleFileDisplay","excelFiles","map","file","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","index","src","title","_c","$RefreshReg$"],"sources":["C:/Users/2000081298/Amerihealth/acfc/src/pages/Payroll/Edoprod.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import './Edoprod.css';\r\n\r\n// const Edoprod= () => {\r\n\r\n//   const [selectedFile, setSelectedFile] = useState(null);\r\n\r\n//   const files = [\r\n//     { name: 'ACFC Response Excel', type: 'excel', path: '/excel_file.xlsx' },\r\n//     { name: 'Enhancements and ticket data', type: 'excel', path: '/excel_file.xlsx' },\r\n//   ];\r\n//   const handleFileDisplay = (path) => {\r\n//     // window.open(path, '_blank');\r\n//     window.location.href = path;\r\n//   };\r\n  \r\n\r\n//   return (\r\n//     <div className=\"container\">\r\n//       {files.map((file, index) => (\r\n//         // <button key={index} className=\"button\" onClick={() => handleFileDisplay(file.path)}>\r\n//         //   {file.name}\r\n//         // </button>\r\n//         <button key={index} className=\"button\" onClick={() => handleFileDisplay(file.path)}>\r\n//   {file.name}\r\n// </button>\r\n\r\n//       ))}\r\n//       {selectedFile && (\r\n//         <div className=\"file-container\">\r\n//           {/* Display the selected file based on its type */}\r\n//           {selectedFile.endsWith('.png') && <img className=\"file-display\" src={selectedFile} alt=\"File\" />}\r\n//           {selectedFile.endsWith('.pptx') && <iframe className=\"file-display\" src={selectedFile} title=\"File\" />}\r\n//           {selectedFile.endsWith('.pdf') && <iframe className=\"file-display\" src={selectedFile} title=\"File\" />}\r\n//           {selectedFile.endsWith('.docx') && <iframe className=\"file-display\" src={selectedFile} title=\"File\" />}\r\n//           {selectedFile.endsWith('.xlsx') && <iframe className=\"file-display\" src={selectedFile} title=\"File\" />}\r\n//           {selectedFile.endsWith('.video') && (\r\n//             <video className=\"file-display\" src={selectedFile} controls>\r\n//               Your browser does not support the video tag.\r\n//             </video>\r\n//           )}\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n\r\n// export default Edoprod;\r\nimport React, { useState } from 'react';\r\nimport './Edoprod.css';\r\n\r\nconst Edoprod= () => {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n\r\n  const files = [\r\n    { name: 'ACFC Response Excel', type: 'excel', path: '/acfc_response.xlsx' },\r\n    { name: 'Enhancements and ticket data', type: 'excel', path: '/ticket_data.xlsx' },\r\n  ];\r\n\r\n  const handleFileDisplay = () => {\r\n    // Get paths of all Excel files\r\n    const excelFiles = files.map(file => file.path);\r\n    // Set the selected file to display all Excel files\r\n    setSelectedFile(excelFiles);\r\n  };\r\n  \r\n  return (\r\n    <div className=\"container\">\r\n      <button className=\"button\" onClick={handleFileDisplay}>\r\n        Display All Excel Files\r\n      </button>\r\n      {selectedFile && (\r\n        <div className=\"file-container\">\r\n          {/* Display all Excel files */}\r\n          {selectedFile.map((path, index) => (\r\n            <iframe key={index} className=\"file-display\" src={path} title={`Excel File ${index}`} />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Edoprod;\r\n\r\n"],"mappings":";;AAAA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,OAAO,GAAEA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMO,KAAK,GAAG,CACZ;IAAEC,IAAI,EAAE,qBAAqB;IAAEC,IAAI,EAAE,OAAO;IAAEC,IAAI,EAAE;EAAsB,CAAC,EAC3E;IAAEF,IAAI,EAAE,8BAA8B;IAAEC,IAAI,EAAE,OAAO;IAAEC,IAAI,EAAE;EAAoB,CAAC,CACnF;EAED,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B;IACA,MAAMC,UAAU,GAAGL,KAAK,CAACM,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACJ,IAAI,CAAC;IAC/C;IACAJ,eAAe,CAACM,UAAU,CAAC;EAC7B,CAAC;EAED,oBACEV,OAAA;IAAKa,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBd,OAAA;MAAQa,SAAS,EAAC,QAAQ;MAACE,OAAO,EAAEN,iBAAkB;MAAAK,QAAA,EAAC;IAEvD;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACRhB,YAAY,iBACXH,OAAA;MAAKa,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAE5BX,YAAY,CAACQ,GAAG,CAAC,CAACH,IAAI,EAAEY,KAAK,kBAC5BpB,OAAA;QAAoBa,SAAS,EAAC,cAAc;QAACQ,GAAG,EAAEb,IAAK;QAACc,KAAK,EAAG,cAAaF,KAAM;MAAE,GAAxEA,KAAK;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAqE,CACxF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACjB,EAAA,CA9BID,OAAO;AAAAsB,EAAA,GAAPtB,OAAO;AAgCb,eAAeA,OAAO;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}