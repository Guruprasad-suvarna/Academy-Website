{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2000081298\\\\Amerihealth\\\\acfc\\\\src\\\\pages\\\\ProgressBar.js\";\n// // import ProgressBar from 'react-bootstrap/ProgressBar';\n\n// // function AnimatedExample() {\n\n// //   return <ProgressBar animated now={50} variant=\"info\" />;\n// // }\n\n// // export default AnimatedExample;\n\n// import React, { useState } from 'react';\n// import ProgressBar from 'react-bootstrap/ProgressBar';\n\n// function CustomProgressBar() {\n//   const [progress, setProgress] = useState(0);\n\n//   const handleClick = () => {\n//     // Set progress to 0\n//     setProgress(0);\n\n//     // Simulate progress incrementing every 100 milliseconds\n//     const interval = setInterval(() => {\n//       setProgress((prevProgress) => {\n//         // Increment progress by 1 until it reaches 100\n//         if (prevProgress >= 100) {\n//           clearInterval(interval); // Stop the interval when progress reaches 100\n//           return 100;\n//         }\n//         return prevProgress + 1;\n//       });\n//     }, 100); // Change the interval duration as needed\n\n//     // Simulate a delay before the progress starts\n//     setTimeout(() => {\n//       clearInterval(interval); // Stop the interval if it's still running\n//       setProgress(10); // Start progress from 10%\n//     }, 2000); // Change the delay duration as needed\n\n//     // Simulate a delay before the progress completes\n//     setTimeout(() => {\n//       setProgress(100); // Set progress to 100% when completed\n//     }, 5000); // Change the completion delay duration as needed\n//   };\n\n//   return (\n//     <div>\n\n//       <ProgressBar animated now={progress} variant=\"info\" />\n//     </div>\n//   );\n// }\n\n// export default CustomProgressBar;\n\nimport React from 'react';\n// import ProgressBar from 'react-bootstrap/ProgressBar';\nimport \"./ProgressBar.css\";\n// import ProgressBar from 'react-bootstrap/ProgressBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProgressBar = ({\n  currentProgress,\n  totalItems\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"progress-bar-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-bar\",\n      style: {\n        width: `${currentProgress / totalItems * 100}%`\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar-text\",\n        children: [\" \", currentProgress, \" Out of \", totalItems, \" Completed\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_c = ProgressBar;\nexport default ProgressBar;\nvar _c;\n$RefreshReg$(_c, \"ProgressBar\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ProgressBar","currentProgress","totalItems","className","children","style","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/2000081298/Amerihealth/acfc/src/pages/ProgressBar.js"],"sourcesContent":["// // import ProgressBar from 'react-bootstrap/ProgressBar';\r\n\r\n// // function AnimatedExample() {\r\n\r\n// //   return <ProgressBar animated now={50} variant=\"info\" />;\r\n// // }\r\n\r\n// // export default AnimatedExample;\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import ProgressBar from 'react-bootstrap/ProgressBar';\r\n\r\n// function CustomProgressBar() {\r\n//   const [progress, setProgress] = useState(0);\r\n\r\n//   const handleClick = () => {\r\n//     // Set progress to 0\r\n//     setProgress(0);\r\n\r\n//     // Simulate progress incrementing every 100 milliseconds\r\n//     const interval = setInterval(() => {\r\n//       setProgress((prevProgress) => {\r\n//         // Increment progress by 1 until it reaches 100\r\n//         if (prevProgress >= 100) {\r\n//           clearInterval(interval); // Stop the interval when progress reaches 100\r\n//           return 100;\r\n//         }\r\n//         return prevProgress + 1;\r\n//       });\r\n//     }, 100); // Change the interval duration as needed\r\n\r\n//     // Simulate a delay before the progress starts\r\n//     setTimeout(() => {\r\n//       clearInterval(interval); // Stop the interval if it's still running\r\n//       setProgress(10); // Start progress from 10%\r\n//     }, 2000); // Change the delay duration as needed\r\n\r\n//     // Simulate a delay before the progress completes\r\n//     setTimeout(() => {\r\n//       setProgress(100); // Set progress to 100% when completed\r\n//     }, 5000); // Change the completion delay duration as needed\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n      \r\n//       <ProgressBar animated now={progress} variant=\"info\" />\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default CustomProgressBar;\r\n\r\n\r\n\r\nimport React from 'react';\r\n// import ProgressBar from 'react-bootstrap/ProgressBar';\r\nimport \"./ProgressBar.css\"\r\n// import ProgressBar from 'react-bootstrap/ProgressBar';\r\n\r\nconst ProgressBar = ({ currentProgress, totalItems }) => {\r\n  return (\r\n    <div className=\"progress-bar-container\">\r\n     \r\n      <div className=\"progress-bar\" style={{ width: `${(currentProgress / totalItems) * 100}%` }}>\r\n        {/* Display progress as \"X out of Y completed\" */}\r\n        <div className=\"progress-bar-text\"> {currentProgress} Out of {totalItems} Completed</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n \r\nexport default ProgressBar;\r\n"],"mappings":";AAAA;;AAEA;;AAEA;AACA;;AAEA;;AAIA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAIA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,OAAO,mBAAmB;AAC1B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,WAAW,GAAGA,CAAC;EAAEC,eAAe;EAAEC;AAAW,CAAC,KAAK;EACvD,oBACEH,OAAA;IAAKI,SAAS,EAAC,wBAAwB;IAAAC,QAAA,eAErCL,OAAA;MAAKI,SAAS,EAAC,cAAc;MAACE,KAAK,EAAE;QAAEC,KAAK,EAAG,GAAGL,eAAe,GAAGC,UAAU,GAAI,GAAI;MAAG,CAAE;MAAAE,QAAA,eAEzFL,OAAA;QAAKI,SAAS,EAAC,mBAAmB;QAAAC,QAAA,GAAC,GAAC,EAACH,eAAe,EAAC,UAAQ,EAACC,UAAU,EAAC,YAAU;MAAA;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACC,EAAA,GAVIX,WAAW;AAYjB,eAAeA,WAAW;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}